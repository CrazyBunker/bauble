name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        app: [battary-indicator, yarurf-balance-checker]
        include:
          - os: ubuntu-latest
            suffix: linux
            ext: ""
            archive: tar.gz
          - os: windows-latest
            suffix: windows
            ext: ".exe"
            archive: zip
          - os: macos-latest
            suffix: darwin
            ext: ""
            archive: tar.gz

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build merge_events
      run: |
        make ${{ matrix.app }} ext=${{ matrix.ext }}
    
    - name: Package binary (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        tar -czf "dist/${{ matrix.app }}-${{ matrix.suffix }}.${{ matrix.archive }}" -C "bin" "${{ matrix.app }}${{ matrix.ext }}"

    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        New-Item -ItemType Directory -Path "dist" -Force
        Compress-Archive -Path "bin/${{ matrix.app }}${{ matrix.ext }}" -DestinationPath "dist/${{ matrix.app }}-${{ matrix.suffix }}.${{ matrix.archive }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-${{ matrix.suffix }}
        path: dist/${{ matrix.app }}-${{ matrix.suffix }}.${{ matrix.archive }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            bin/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # release-assets:
  #   needs: release
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #       app: [battary-indicator, yarurf-balance-checker]
  #       include:
  #         - os: ubuntu-latest
  #           suffix: linux
  #           archive: tar.gz
  #         - os: windows-latest
  #           suffix: windows
  #           archive: zip
  #         - os: macos-latest
  #           suffix: darwin
  #           archive: tar.gz            
  #   steps:
  #     - name: Upload Release Asset - Linux
  #       uses: actions/upload-release-asset@v1
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: dist/${{ matrix.app }}-${{ matrix.suffix }}/${{ matrix.app }}-${{ matrix.suffix }}.${{ matrix.archive }}
  #         asset_name: ${{ matrix.app }}-${{ matrix.suffix }}.${{ matrix.archive }}
  #         asset_content_type: application/gzip
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}